
@if (list == null)
{
    <h1>No Data Avaliable</h1>
}
else
{
    if (permissionAdd)
    {
        <button class="btn btn-primary">Add</button>
    }

    @if (type != "none")
    {
        @if (type == "text")
        {
            <label>@label</label>

            @if (button)
            {
                <div class="mb-4">
                    <input type="text" @bind-value="value" @bind-value:event="oninput"
                           class="form-check form-control" />
                    <br />
                    <button class="btn btn-primary" @onclick="Search">Search</button>
                </div>
            }
            else
            {
                <div class="mb-4">
                    <input type="text" @bind-value="value" @bind-value:event="oninput"
                           class="form-check form-control" @onkeyup="Search" />
                    <br />
                </div>
            }
        }
        else if (type == "combobox")
        {
            if (button)
            {
                <div class="mb-4">
                    <select class="form-check form-control" @bind-value="value" @bind-value:event="oninput">
                        <option value="">--Selected One Item--</option>
                        @foreach (var item in combobox)
                        {
                            <option value="@item.GetType().GetProperty(valueMember).GetValue(item)">
                                @item.GetType().GetProperty(displayMember).GetValue(item)
                            </option>
                        }
                    </select><br />
                    <input type="button" value="Search" class="btn btn-primary" @onclick="Search" />
                </div>
            }
            else
            {
                <div class="mb-4">
                    <select class="form-check form-control" @bind-value="value" @bind-value:event="oninput"
                            @onchange="Search">
                        <option value="">--Selected One Item--</option>
                        @foreach (var item in combobox)
                        {
                            <option value="@item.GetType().GetProperty(valueMember).GetValue(item)">
                                @item.GetType().GetProperty(displayMember).GetValue(item)
                            </option>
                        }
                    </select><br />
                    <input type="button" value="Search" class="btn btn-primary" @onclick="Search" />
                </div>
            }
        }
    }

    <table class="table">
        <thead>
            <tr>
                @foreach (var item in titles)
                {
                    <td>@item</td>
                }
                @if (permissionDelete || permissionEdit)
                {
                    <td>Operations</td>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (object obj in list)
            {
                <tr>
                    @foreach (var prop in obj.GetType().GetProperties())
                    {
                        <td>@prop.GetValue(obj)</td>
                    }
                    @if (permissionDelete || permissionEdit)
                    {
                        <td>
                            @if (permissionEdit)
                            {
                                <button class="btn btn-primary fa fa-edit"
                                        @onclick="@(()=>Update(obj.GetType().GetProperties()[0].GetValue(obj).ToString()))"></button>
                            }
                            @if (permissionDelete)
                            {
                                <button class="btn btn-danger fa fa-trash"
                                        data-toggle="modal" data-target=".bd-example-modal-sm"
                                        @onclick="@(()=>Delete(@obj.GetType().GetProperties()[4].GetValue(@obj).ToString()))"></button>
                                        <MessageConfirmation id="@valueDelete" eventDelete="DeleteData"/>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}


@code {

    public string valueDelete { get; set; }

    public string value { get; set; }

    [Parameter]
    public string[] titles { get; set; }

    [Parameter]
    public object[] list { get; set; }

    [Parameter]
    public string type { get; set; } = "none";

    [Parameter]
    public string label { get; set; } = "";

    [Parameter]
    public bool button { get; set; }

    [Parameter]
    public EventCallback<string> eventQueue { get; set; }

    [Parameter]
    public EventCallback<string> eventUpdate { get; set; }

    [Parameter]
    public EventCallback<string> eventDelete { get; set; }

    public void Update(string data)
    {
        eventUpdate.InvokeAsync(data);
    }

    public void Delete(string data)
    {
        valueDelete = data;
        //eventDelete.InvokeAsync(data);
    }

    public void DeleteData(string data)
    {
        eventDelete.InvokeAsync(data);
    }

    public void Search()
    {
        eventQueue.InvokeAsync(value);
    }

    #region DropdownProperties
    [Parameter]
    public object[] combobox { get; set; } = null;

    [Parameter]
    public string displayMember { get; set; } = null;

    [Parameter]
    public string valueMember { get; set; } = null;
    #endregion

    #region CrudOperationPermission

    [Parameter]
    public bool permissionAdd { get; set; } = false;

    [Parameter]
    public bool permissionEdit { get; set; } = false;

    [Parameter]
    public bool permissionDelete { get; set; } = false;
    #endregion
}
